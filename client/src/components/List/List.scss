@import '../../variables';

$list-icons-space: $icon-size-large + 32px;
$list-icons-space-details: $icon-size-large + $icon-size-medium + 48px;
$list-max-width: $max-width-text + $list-icons-space;
$list-max-width-details: $max-width-text + $list-icons-space-details;

.List {
  .heading {
    margin-bottom: 32px;
    max-width: $list-max-width;
  }

  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  li {
    width: 100%;
    max-width: $list-max-width;
    box-sizing: border-box;
    padding: 16px 8px;

    &.disabled {
      opacity: $text-low-emphasis-amount;
    }

    .itemContentOuterWrapper {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .itemContentWrapper {
      display: flex;
      align-items: center;
      flex-basis: 100%;
    }

    .Icon {
      margin-right: 16px;
    }

    .Label {
      margin-top: 0;
      margin-bottom: 8px;
    }

    .content {
      margin-bottom: 0;
    }

    .description {
      margin-top: 8px;
      margin-bottom: 0;
      opacity: $text-medium-emphasis-amount;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: calc(90vw - #{$list-icons-space});

      @include media($list-max-width / 90 * 100) {
        max-width: $list-max-width - $list-icons-space;
      }
    }
  }

  &.details {
    .heading,
    li {
      max-width: $list-max-width-details;
    }

    li .description {
      max-width: calc(90vw - #{$list-icons-space-details});

      @include media($list-max-width-details / 90 * 100) {
        max-width: $list-max-width-details - $list-icons-space-details;
      }
    }
  }

  &.unwrap li .description {
    white-space: initial;
    overflow: visible;
  }

  &.iconsAtTheEnd li .itemContentWrapper {
    justify-content: space-between;

    .Icon {
      order: 1;
      margin-right: 0;
      margin-left: 16px;
    }
  }
}

.List.routed li {
  transition: background-color $transition-fast;

  &:not(.disabled) {
    cursor: pointer;
  }

  &:not(.disabled):hover {
    background-color: rgba(#fff, $opacity-hover);
  }

  &:not(.disabled):active {
    background-color: rgba(#fff, $opacity-active);
  }
}

.light .List.routed li {
  &:not(.disabled):hover {
    background-color: rgba(#000, $opacity-hover);
  }

  &:not(.disabled):active {
    background-color: rgba(#000, $opacity-active);
  }
}

.List + .List {
  @include ss('padding-top', $spacing-large-mobile, $spacing-large-desktop);
}
