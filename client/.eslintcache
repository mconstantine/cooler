[{"/Users/mconst/Documents/Working/cooler/client/src/stories/Panel.stories.tsx":"1","/Users/mconst/Documents/Working/cooler/client/src/stories/Typography.stories.tsx":"2","/Users/mconst/Documents/Working/cooler/client/src/stories/CoolerStory.tsx":"3","/Users/mconst/Documents/Working/cooler/client/src/components/Content/Content.tsx":"4","/Users/mconst/Documents/Working/cooler/client/src/components/Panel/Panel.tsx":"5","/Users/mconst/Documents/Working/cooler/client/src/components/Cooler/Cooler.tsx":"6","/Users/mconst/Documents/Working/cooler/client/src/a18n.tsx":"7","/Users/mconst/Documents/Working/cooler/client/src/components/List/List.tsx":"8","/Users/mconst/Documents/Working/cooler/client/src/components/Icon/Icon.tsx":"9","/Users/mconst/Documents/Working/cooler/client/src/components/Label/Label.tsx":"10","/Users/mconst/Documents/Working/cooler/client/src/stories/Icon.stories.tsx":"11","/Users/mconst/Documents/Working/cooler/client/src/components/Separator/Separator.tsx":"12","/Users/mconst/Documents/Working/cooler/client/src/misc/composeClassName.ts":"13","/Users/mconst/Documents/Working/cooler/client/src/components/Button/Button/Button.tsx":"14","/Users/mconst/Documents/Working/cooler/client/src/stories/Button/Button.stories.tsx":"15","/Users/mconst/Documents/Working/cooler/client/src/components/Button/Buttons/Buttons.tsx":"16","/Users/mconst/Documents/Working/cooler/client/src/stories/Button/LoadingButton.stories.tsx":"17","/Users/mconst/Documents/Working/cooler/client/src/components/Button/LoadingButton/LoadingButton.tsx":"18","/Users/mconst/Documents/Working/cooler/client/src/globalDomain.tsx":"19","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/Input/Input.tsx":"20","/Users/mconst/Documents/Working/cooler/client/src/components/Form/validators.ts":"21","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/LoginForm.stories.tsx":"22","/Users/mconst/Documents/Working/cooler/client/src/misc/commonErrors.ts":"23","/Users/mconst/Documents/Working/cooler/client/src/components/Form/useForm.tsx":"24","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/LoginForm.tsx":"25","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Form.tsx":"26","/Users/mconst/Documents/Working/cooler/client/src/components/Button/LoadingButton/ControlledLoadingButton.tsx":"27","/Users/mconst/Documents/Working/cooler/client/src/stories/Modal.stories.tsx":"28","/Users/mconst/Documents/Working/cooler/client/src/components/Modal/Modal.tsx":"29","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/Select.stories.tsx":"30","/Users/mconst/Documents/Working/cooler/client/src/entities/Client.ts":"31","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/ClientForm.stories.tsx":"32","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/ClientForm.tsx":"33","/Users/mconst/Documents/Working/cooler/client/src/misc/clientLinters.tsx":"34","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/DateTimePicker.stories.tsx":"35","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/DateTimePicker.tsx":"36","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/CounterSelect.stories.tsx":"37","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/DaysGrid.tsx":"38","/Users/mconst/Documents/Working/cooler/client/src/effects/useCombinedRef.ts":"39","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/TextArea.stories.tsx":"40","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/TextArea/TextArea.tsx":"41","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/ProjectForm.stories.tsx":"42","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/ProjectForm.tsx":"43","/Users/mconst/Documents/Working/cooler/client/src/stories/Loading.stories.tsx":"44","/Users/mconst/Documents/Working/cooler/client/src/components/Loading/Loading.tsx":"45","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/Toggle.stories.tsx":"46","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/Toggle/Toggle.tsx":"47","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/AsyncSelect.tsx":"48","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/ToggleButton.stories.tsx":"49","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/ToggleButton.tsx":"50","/Users/mconst/Documents/Working/cooler/client/src/stories/Button/args.ts":"51","/Users/mconst/Documents/Working/cooler/client/src/stories/args.ts":"52","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/TaskForm.stories.tsx":"53","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/TaskForm.tsx":"54","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/WeekdayRepetition.stories.tsx":"55","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/WeekdayRepetition/WeekdayRepetition.tsx":"56","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/TimesheetForm.stories.tsx":"57","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/TimesheetForm.tsx":"58","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/SimpleSelect.tsx":"59","/Users/mconst/Documents/Working/cooler/client/src/stories/Pages/Profile/UserData.stories.tsx":"60","/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/UserData.tsx":"61","/Users/mconst/Documents/Working/cooler/client/src/stories/Pages/Profile/CurrentSituation.stories.tsx":"62","/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/CurrentSituation.tsx":"63","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/Select/Select.tsx":"64","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/CounterSelect/CounterSelect.tsx":"65","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/utils.ts":"66","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/DatePickerForm.tsx":"67","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/TimePickerForm.tsx":"68","/Users/mconst/Documents/Working/cooler/client/src/stories/Pages/Profile/CashedAmount.stories.tsx":"69","/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/CashedAmount.tsx":"70","/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/utils.tsx":"71","/Users/mconst/Documents/Working/cooler/client/src/stories/Button/IconOnlyButton.stories.tsx":"72","/Users/mconst/Documents/Working/cooler/client/src/stories/List/args.ts":"73","/Users/mconst/Documents/Working/cooler/client/src/stories/List/ReadonlyList.stories.tsx":"74","/Users/mconst/Documents/Working/cooler/client/src/stories/List/ReadonlyListWithIcons.stories.tsx":"75","/Users/mconst/Documents/Working/cooler/client/src/stories/List/RoutedList.stories.tsx":"76","/Users/mconst/Documents/Working/cooler/client/src/stories/List/RoutedListWithIcons.stories.tsx":"77","/Users/mconst/Documents/Working/cooler/client/src/stories/List/ListWithValues.stories.tsx":"78","/Users/mconst/Documents/Working/cooler/client/src/components/ConnectionList/ConnectionList.tsx":"79","/Users/mconst/Documents/Working/cooler/client/src/misc/graphql.ts":"80","/Users/mconst/Documents/Working/cooler/client/src/stories/ConnectionList.stories.tsx":"81","/Users/mconst/Documents/Working/cooler/client/src/components/Loading/LoadingBlock.tsx":"82","/Users/mconst/Documents/Working/cooler/client/src/components/constants.ts":"83","/Users/mconst/Documents/Working/cooler/client/src/effects/useDebounce.ts":"84","/Users/mconst/Documents/Working/cooler/client/src/stories/Body.stories.tsx":"85","/Users/mconst/Documents/Working/cooler/client/src/components/Body/Body.tsx":"86","/Users/mconst/Documents/Working/cooler/client/src/stories/Heading.stories.tsx":"87","/Users/mconst/Documents/Working/cooler/client/src/components/Heading/Heading.tsx":"88","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/UserForm.tsx":"89","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/TaxForm.stories.tsx":"90","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/TaxForm.tsx":"91"},{"size":1246,"mtime":1611938482969,"results":"92","hashOfConfig":"93"},{"size":5075,"mtime":1611941119678,"results":"94","hashOfConfig":"93"},{"size":317,"mtime":1607177406440,"results":"95","hashOfConfig":"93"},{"size":145,"mtime":1607179448513,"results":"96","hashOfConfig":"93"},{"size":651,"mtime":1611942201684,"results":"97","hashOfConfig":"93"},{"size":224,"mtime":1607609305712,"results":"98","hashOfConfig":"93"},{"size":3482,"mtime":1611767107701,"results":"99","hashOfConfig":"93"},{"size":8567,"mtime":1611942125156,"results":"100","hashOfConfig":"93"},{"size":523,"mtime":1609869850970,"results":"101","hashOfConfig":"93"},{"size":529,"mtime":1608306886073,"results":"102","hashOfConfig":"93"},{"size":882,"mtime":1611834697835,"results":"103","hashOfConfig":"93"},{"size":96,"mtime":1607378504683,"results":"104","hashOfConfig":"93"},{"size":117,"mtime":1607615976399,"results":"105","hashOfConfig":"93"},{"size":3118,"mtime":1610725322149,"results":"106","hashOfConfig":"93"},{"size":1311,"mtime":1611769791853,"results":"107","hashOfConfig":"93"},{"size":1266,"mtime":1611859946674,"results":"108","hashOfConfig":"93"},{"size":2255,"mtime":1611770360576,"results":"109","hashOfConfig":"93"},{"size":1302,"mtime":1610732422772,"results":"110","hashOfConfig":"93"},{"size":8384,"mtime":1611761026377,"results":"111","hashOfConfig":"93"},{"size":2725,"mtime":1610036963624,"results":"112","hashOfConfig":"93"},{"size":2365,"mtime":1611698055452,"results":"113","hashOfConfig":"93"},{"size":1474,"mtime":1611831839033,"results":"114","hashOfConfig":"93"},{"size":333,"mtime":1611150371470,"results":"115","hashOfConfig":"93"},{"size":9516,"mtime":1611774558440,"results":"116","hashOfConfig":"93"},{"size":5023,"mtime":1611831616457,"results":"117","hashOfConfig":"93"},{"size":2924,"mtime":1611774605823,"results":"118","hashOfConfig":"93"},{"size":4027,"mtime":1610732578095,"results":"119","hashOfConfig":"93"},{"size":4252,"mtime":1611938533715,"results":"120","hashOfConfig":"93"},{"size":1059,"mtime":1609366312963,"results":"121","hashOfConfig":"93"},{"size":5301,"mtime":1611773052715,"results":"122","hashOfConfig":"93"},{"size":17499,"mtime":1608726069289,"results":"123","hashOfConfig":"93"},{"size":1344,"mtime":1611775093725,"results":"124","hashOfConfig":"93"},{"size":9276,"mtime":1611941896996,"results":"125","hashOfConfig":"93"},{"size":3462,"mtime":1609346261531,"results":"126","hashOfConfig":"93"},{"size":2341,"mtime":1611771477179,"results":"127","hashOfConfig":"93"},{"size":7840,"mtime":1611834276021,"results":"128","hashOfConfig":"93"},{"size":2513,"mtime":1611771298800,"results":"129","hashOfConfig":"93"},{"size":1844,"mtime":1610637807623,"results":"130","hashOfConfig":"93"},{"size":550,"mtime":1611696726509,"results":"131","hashOfConfig":"93"},{"size":2503,"mtime":1611773367356,"results":"132","hashOfConfig":"93"},{"size":2673,"mtime":1610970643812,"results":"133","hashOfConfig":"93"},{"size":2214,"mtime":1611832097016,"results":"134","hashOfConfig":"93"},{"size":3804,"mtime":1611832010923,"results":"135","hashOfConfig":"93"},{"size":859,"mtime":1611846778646,"results":"136","hashOfConfig":"93"},{"size":424,"mtime":1611859626861,"results":"137","hashOfConfig":"93"},{"size":2158,"mtime":1611773707588,"results":"138","hashOfConfig":"93"},{"size":1991,"mtime":1610636012449,"results":"139","hashOfConfig":"93"},{"size":1386,"mtime":1611599912600,"results":"140","hashOfConfig":"93"},{"size":3085,"mtime":1611774054343,"results":"141","hashOfConfig":"93"},{"size":1133,"mtime":1610725936505,"results":"142","hashOfConfig":"93"},{"size":607,"mtime":1611769326452,"results":"143","hashOfConfig":"93"},{"size":540,"mtime":1611834673011,"results":"144","hashOfConfig":"93"},{"size":2247,"mtime":1611833068326,"results":"145","hashOfConfig":"93"},{"size":6062,"mtime":1611832386446,"results":"146","hashOfConfig":"93"},{"size":2365,"mtime":1611774187127,"results":"147","hashOfConfig":"93"},{"size":4006,"mtime":1610986212959,"results":"148","hashOfConfig":"93"},{"size":2276,"mtime":1611833210703,"results":"149","hashOfConfig":"93"},{"size":4287,"mtime":1611833112732,"results":"150","hashOfConfig":"93"},{"size":777,"mtime":1611599908920,"results":"151","hashOfConfig":"93"},{"size":1437,"mtime":1611847533531,"results":"152","hashOfConfig":"93"},{"size":3447,"mtime":1611943113037,"results":"153","hashOfConfig":"93"},{"size":2773,"mtime":1611847441863,"results":"154","hashOfConfig":"93"},{"size":5543,"mtime":1611769150134,"results":"155","hashOfConfig":"93"},{"size":12043,"mtime":1611772998239,"results":"156","hashOfConfig":"93"},{"size":3675,"mtime":1611833425378,"results":"157","hashOfConfig":"93"},{"size":1008,"mtime":1611700268299,"results":"158","hashOfConfig":"93"},{"size":3502,"mtime":1611834210162,"results":"159","hashOfConfig":"93"},{"size":2542,"mtime":1611834256904,"results":"160","hashOfConfig":"93"},{"size":2395,"mtime":1611847337433,"results":"161","hashOfConfig":"93"},{"size":3087,"mtime":1611768959862,"results":"162","hashOfConfig":"93"},{"size":199,"mtime":1611766276656,"results":"163","hashOfConfig":"93"},{"size":1019,"mtime":1611769839376,"results":"164","hashOfConfig":"93"},{"size":2147,"mtime":1611836504402,"results":"165","hashOfConfig":"93"},{"size":1754,"mtime":1611836565557,"results":"166","hashOfConfig":"93"},{"size":2475,"mtime":1611836863924,"results":"167","hashOfConfig":"93"},{"size":2035,"mtime":1611845301965,"results":"168","hashOfConfig":"93"},{"size":2399,"mtime":1611845829575,"results":"169","hashOfConfig":"93"},{"size":2784,"mtime":1611846670794,"results":"170","hashOfConfig":"93"},{"size":6197,"mtime":1611938595644,"results":"171","hashOfConfig":"93"},{"size":1190,"mtime":1611853186510,"results":"172","hashOfConfig":"93"},{"size":5964,"mtime":1611936063249,"results":"173","hashOfConfig":"93"},{"size":235,"mtime":1611859679044,"results":"174","hashOfConfig":"93"},{"size":33,"mtime":1611859895492,"results":"175","hashOfConfig":"93"},{"size":447,"mtime":1611934939340,"results":"176","hashOfConfig":"93"},{"size":1262,"mtime":1611937055535,"results":"177","hashOfConfig":"93"},{"size":565,"mtime":1611944207382,"results":"178","hashOfConfig":"93"},{"size":1600,"mtime":1611941461823,"results":"179","hashOfConfig":"93"},{"size":2117,"mtime":1611941949608,"results":"180","hashOfConfig":"93"},{"size":3638,"mtime":1611942975367,"results":"181","hashOfConfig":"93"},{"size":1246,"mtime":1611943534315,"results":"182","hashOfConfig":"93"},{"size":1578,"mtime":1611944486792,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5owmop",{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"190"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"190"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"190"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"190"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"190"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"190"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"190"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mconst/Documents/Working/cooler/client/src/stories/Panel.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Typography.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/CoolerStory.tsx",[],["374","375"],"/Users/mconst/Documents/Working/cooler/client/src/components/Content/Content.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Panel/Panel.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Cooler/Cooler.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/a18n.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/List/List.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Icon/Icon.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Label/Label.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Icon.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Separator/Separator.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/misc/composeClassName.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Button/Button/Button.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Button/Button.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Button/Buttons/Buttons.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Button/LoadingButton.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Button/LoadingButton/LoadingButton.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/globalDomain.tsx",["376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"import { either, option } from 'fp-ts'\nimport { flow, identity, pipe } from 'fp-ts/function'\nimport { Option } from 'fp-ts/Option'\nimport * as t from 'io-ts'\nimport { IntFromString, NonEmptyString, NumberFromString } from 'io-ts-types'\nimport { validate as isEmail } from 'isemail'\nimport { option as tOption } from 'io-ts-types/option'\nimport { unsafeLocalizedString } from './a18n'\n\nexport type LocalizedStringBrand = string & {\n  readonly LocalizedString: unique symbol\n}\n\nexport const LocalizedString = t.brand(\n  t.string,\n  (_): _ is t.Branded<string, LocalizedStringBrand> => true,\n  'LocalizedString'\n)\nexport type LocalizedString = t.TypeOf<typeof LocalizedString>\n\ninterface EmailStringBrand {\n  readonly EmailString: unique symbol\n}\n\nexport const EmailString = t.brand(\n  t.string,\n  (s): s is t.Branded<string, EmailStringBrand> => isEmail(s),\n  'EmailString'\n)\nexport type EmailString = t.TypeOf<typeof EmailString>\n\nexport function unsafeEmailString(s: string): EmailString {\n  return s as EmailString\n}\n\nexport const Color = t.keyof(\n  {\n    default: true,\n    primary: true,\n    success: true,\n    warning: true,\n    danger: true\n  },\n  'Color'\n)\nexport type Color = t.TypeOf<typeof Color>\n\nexport const Size = t.keyof(\n  {\n    large: true,\n    medium: true,\n    small: true\n  },\n  'Size'\n)\nexport type Size = t.TypeOf<typeof Size>\n\nexport function unsafeNonEmptyString(s: string): NonEmptyString {\n  return s as NonEmptyString\n}\n\ninterface PositiveIntegerBrand {\n  readonly PositiveInteger: unique symbol\n}\n\nexport const PositiveInteger = t.brand(\n  t.Int,\n  (n): n is t.Branded<t.Int, PositiveIntegerBrand> => n > 0,\n  'PositiveInteger'\n)\nexport type PositiveInteger = t.TypeOf<typeof PositiveInteger>\n\nexport const PositiveIntegerFromString: t.Type<\n  PositiveInteger,\n  string,\n  unknown\n> = new t.Type(\n  'PositiveIntegerFromString',\n  PositiveInteger.is,\n  (u, c) =>\n    pipe(\n      IntFromString.decode(u),\n      either.chain(n =>\n        n > 0 ? t.success(n as PositiveInteger) : t.failure(u, c)\n      )\n    ),\n  n => n.toString(10)\n)\nexport type PositiveIntegerFromString = t.TypeOf<\n  typeof PositiveIntegerFromString\n>\n\nexport function unsafePositiveInteger(n: number): PositiveInteger {\n  return n as PositiveInteger\n}\n\ninterface NonNegativeIntegerBrand {\n  readonly NonNegativeInteger: unique symbol\n}\n\nexport const NonNegativeInteger = t.brand(\n  t.Int,\n  (n): n is t.Branded<t.Int, NonNegativeIntegerBrand> => n >= 0,\n  'NonNegativeInteger'\n)\nexport type NonNegativeInteger = t.TypeOf<typeof NonNegativeInteger>\n\nexport function unsafeNonNegativeInteger(n: number): NonNegativeInteger {\n  return Math.abs(n) as NonNegativeInteger\n}\n\nexport const NonNegativeIntegerFromString: t.Type<\n  NonNegativeInteger,\n  string,\n  unknown\n> = new t.Type(\n  'NonNegativeIntegerFromString',\n  NonNegativeInteger.is,\n  (u, c) =>\n    pipe(\n      IntFromString.decode(u),\n      either.chain(n =>\n        n >= 0 ? t.success(n as NonNegativeInteger) : t.failure(u, c)\n      )\n    ),\n  n => n.toString(10)\n)\nexport type NonNegativeIntegerFromString = t.TypeOf<\n  typeof NonNegativeIntegerFromString\n>\n\ninterface NonNegativeNumberBrand {\n  readonly NonNegativeNumber: unique symbol\n}\n\nexport const NonNegativeNumber = t.brand(\n  t.number,\n  (n): n is t.Branded<number, NonNegativeNumberBrand> => n >= 0,\n  'NonNegativeNumber'\n)\nexport type NonNegativeNumber = t.TypeOf<typeof NonNegativeNumber>\n\nexport const NonNegativeNumberFromString: t.Type<\n  NonNegativeNumber,\n  string,\n  unknown\n> = new t.Type(\n  'NonNegativeNumberFromString',\n  NonNegativeNumber.is,\n  (u, c) =>\n    pipe(\n      NumberFromString.decode(u),\n      either.chain(n =>\n        n >= 0 ? t.success(n as NonNegativeNumber) : t.failure(u, c)\n      )\n    ),\n  n => n.toString(10)\n)\nexport type NonNegativeNumberFromString = t.TypeOf<\n  typeof NonNegativeNumberFromString\n>\n\nexport function unsafeNonNegativeNumber(n: number): NonNegativeNumber {\n  return Math.abs(n) as NonNegativeNumber\n}\n\ninterface PercentageBrand {\n  readonly Percentage: unique symbol\n}\n\nexport const Percentage = t.brand(\n  t.number,\n  (n): n is t.Branded<number, PercentageBrand> => n >= 0 && n <= 1,\n  'Percentage'\n)\nexport type Percentage = t.TypeOf<typeof Percentage>\n\nexport const PercentageFromString: t.Type<\n  Percentage,\n  string,\n  unknown\n> = new t.Type(\n  'PercentageFromString',\n  Percentage.is,\n  (u, c) =>\n    pipe(\n      NumberFromString.decode(u),\n      either.map(n => n / 100),\n      either.chain(n =>\n        n >= 0 && n <= 1 ? t.success(n as Percentage) : t.failure(u, c)\n      )\n    ),\n  n => (n * 100).toFixed(2)\n)\nexport type PercentageFromString = t.TypeOf<typeof PercentageFromString>\n\nexport function unsafePercentage(n: number): Percentage {\n  return n as Percentage\n}\n\nexport function computePercentage(whole: number, fraction: number): Percentage {\n  if (whole === 0) {\n    return unsafePercentage(0)\n  }\n\n  return unsafePercentage(fraction / whole)\n}\n\nexport function formatPercentarge(n: Percentage): LocalizedString {\n  return pipe(\n    n,\n    PercentageFromString.encode,\n    s => `${s}%`,\n    unsafeLocalizedString\n  )\n}\n\nexport const OptionFromEmptyString: t.Type<\n  Option<NonEmptyString>,\n  string\n> = new t.Type(\n  'OptionFromEmptyString',\n  tOption(NonEmptyString).is,\n  flow(\n    NonEmptyString.decode,\n    either.fold(() => t.success(option.none), flow(option.some, t.success))\n  ),\n  flow(option.fold(() => '', identity))\n)\n\nfunction NumberHigherThan<T extends number>(\n  min: number,\n  T: t.Type<T, number, unknown>\n): t.Type<T, number, unknown> {\n  return new t.Type(\n    `${T.name}HigherThan${min}`,\n    T.is,\n    (u, c) =>\n      pipe(\n        T.decode(u),\n        either.chain(n => (n > min ? t.success(n as T) : t.failure(u, c)))\n      ),\n    identity\n  )\n}\n\nfunction NumberFromStringHigherThan<T extends number>(\n  min: number,\n  T: t.Type<T, string, unknown>\n): t.Type<T, string, unknown> {\n  return new t.Type(\n    `${T.name}FromStringHigherThan${min}`,\n    T.is,\n    (u, c) =>\n      pipe(\n        T.decode(u),\n        either.chain(n => (n > min ? t.success(n as T) : t.failure(u, c)))\n      ),\n    n => n.toString(10)\n  )\n}\n\nfunction NumberLowerThan<T extends number>(\n  max: number,\n  T: t.Type<T, number, unknown>\n): t.Type<T, number, unknown> {\n  return new t.Type(\n    `${T.name}LowerThan${max}`,\n    T.is,\n    (u, c) =>\n      pipe(\n        T.decode(u),\n        either.chain(n => (n < max ? t.success(n as T) : t.failure(u, c)))\n      ),\n    identity\n  )\n}\n\nfunction NumberFromStringLowerThan<T extends number>(\n  max: number,\n  T: t.Type<T, string, unknown>\n): t.Type<T, string, unknown> {\n  return new t.Type(\n    `${T.name}LowerThan${max}`,\n    T.is,\n    (u, c) =>\n      pipe(\n        T.decode(u),\n        either.chain(n => (n < max ? t.success(n as T) : t.failure(u, c)))\n      ),\n    n => n.toString(10)\n  )\n}\n\nexport const Month = t.intersection(\n  [NumberHigherThan(-1, t.Int), NumberLowerThan(12, t.Int)],\n  'Month'\n)\nexport type Month = t.TypeOf<typeof Month>\n\nexport const MonthFromString = t.intersection(\n  [\n    NumberFromStringHigherThan(-1, IntFromString),\n    NumberFromStringLowerThan(12, IntFromString)\n  ],\n  'MonthFromString'\n)\nexport type MonthFromString = t.TypeOf<typeof MonthFromString>\n\nexport const Day = t.intersection(\n  [NumberHigherThan(0, t.Int), NumberLowerThan(32, t.Int)],\n  'Day'\n)\nexport type Day = t.TypeOf<typeof Day>\n\nexport const DayFromString = t.intersection(\n  [\n    NumberFromStringHigherThan(0, IntFromString),\n    NumberFromStringLowerThan(32, IntFromString)\n  ],\n  'DayFromString'\n)\nexport type DayFromString = t.TypeOf<typeof DayFromString>\n\nexport const Hour = t.intersection(\n  [NumberHigherThan(-1, t.Int), NumberLowerThan(24, t.Int)],\n  'Hour'\n)\nexport type Hour = t.TypeOf<typeof Hour>\n\nexport const HourFromString = t.intersection(\n  [\n    NumberFromStringHigherThan(-1, IntFromString),\n    NumberFromStringLowerThan(24, IntFromString)\n  ],\n  'HourFromString'\n)\nexport type HourFromString = t.TypeOf<typeof HourFromString>\n\nexport const Minute = t.intersection(\n  [NumberHigherThan(-1, t.Int), NumberLowerThan(60, t.Int)],\n  'Minute'\n)\nexport type Minute = t.TypeOf<typeof Minute>\n\nexport const MinuteFromString = t.intersection(\n  [\n    NumberFromStringHigherThan(-1, IntFromString),\n    NumberFromStringLowerThan(60, IntFromString)\n  ],\n  'MinuteFromString'\n)\nexport type MinuteFromString = t.TypeOf<typeof MinuteFromString>\n","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/Input/Input.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/validators.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/LoginForm.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/misc/commonErrors.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/useForm.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/LoginForm.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Form.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Button/LoadingButton/ControlledLoadingButton.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Modal.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Modal/Modal.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/Select.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/entities/Client.ts",["400","401","402","403","404","405"],"import * as t from 'io-ts'\nimport { NonEmptyString, optionFromNullable } from 'io-ts-types'\nimport { unsafeLocalizedString } from '../a18n'\nimport { EmailString } from '../globalDomain'\n\nexport const ProvinceValues = {\n  AG: unsafeLocalizedString('Agrigento'),\n  AL: unsafeLocalizedString('Alessandria'),\n  AN: unsafeLocalizedString('Ancona'),\n  AO: unsafeLocalizedString('Aosta'),\n  AQ: unsafeLocalizedString(\"L'Aquila\"),\n  AR: unsafeLocalizedString('Arezzo'),\n  AP: unsafeLocalizedString('Ascoli-Piceno'),\n  AT: unsafeLocalizedString('Asti'),\n  AV: unsafeLocalizedString('Avellino'),\n  BA: unsafeLocalizedString('Bari'),\n  BT: unsafeLocalizedString('Barletta-Andria-Trani'),\n  BL: unsafeLocalizedString('Belluno'),\n  BN: unsafeLocalizedString('Benevento'),\n  BG: unsafeLocalizedString('Bergamo'),\n  BI: unsafeLocalizedString('Biella'),\n  BO: unsafeLocalizedString('Bologna'),\n  BZ: unsafeLocalizedString('Bolzano'),\n  BS: unsafeLocalizedString('Brescia'),\n  BR: unsafeLocalizedString('Brindisi'),\n  CA: unsafeLocalizedString('Cagliari'),\n  CL: unsafeLocalizedString('Caltanissetta'),\n  CB: unsafeLocalizedString('Campobasso'),\n  CI: unsafeLocalizedString('Carbonia Iglesias'),\n  CE: unsafeLocalizedString('Caserta'),\n  CT: unsafeLocalizedString('Catania'),\n  CZ: unsafeLocalizedString('Catanzaro'),\n  CH: unsafeLocalizedString('Chieti'),\n  CO: unsafeLocalizedString('Como'),\n  CS: unsafeLocalizedString('Cosenza'),\n  CR: unsafeLocalizedString('Cremona'),\n  KR: unsafeLocalizedString('Crotone'),\n  CN: unsafeLocalizedString('Cuneo'),\n  EN: unsafeLocalizedString('Enna'),\n  FM: unsafeLocalizedString('Fermo'),\n  FE: unsafeLocalizedString('Ferrara'),\n  FI: unsafeLocalizedString('Firenze'),\n  FG: unsafeLocalizedString('Foggia'),\n  FC: unsafeLocalizedString('Forli-Cesena'),\n  FR: unsafeLocalizedString('Frosinone'),\n  GE: unsafeLocalizedString('Genova'),\n  GO: unsafeLocalizedString('Gorizia'),\n  GR: unsafeLocalizedString('Grosseto'),\n  IM: unsafeLocalizedString('Imperia'),\n  IS: unsafeLocalizedString('Isernia'),\n  SP: unsafeLocalizedString('La-Spezia'),\n  LT: unsafeLocalizedString('Latina'),\n  LE: unsafeLocalizedString('Lecce'),\n  LC: unsafeLocalizedString('Lecco'),\n  LI: unsafeLocalizedString('Livorno'),\n  LO: unsafeLocalizedString('Lodi'),\n  LU: unsafeLocalizedString('Lucca'),\n  MC: unsafeLocalizedString('Macerata'),\n  MN: unsafeLocalizedString('Mantova'),\n  MS: unsafeLocalizedString('Massa-Carrara'),\n  MT: unsafeLocalizedString('Matera'),\n  VS: unsafeLocalizedString('Medio Campidano'),\n  ME: unsafeLocalizedString('Messina'),\n  MI: unsafeLocalizedString('Milano'),\n  MO: unsafeLocalizedString('Modena'),\n  MB: unsafeLocalizedString('Monza-Brianza'),\n  NA: unsafeLocalizedString('Napoli'),\n  NO: unsafeLocalizedString('Novara'),\n  NU: unsafeLocalizedString('Nuoro'),\n  OG: unsafeLocalizedString('Ogliastra'),\n  OT: unsafeLocalizedString('Olbia Tempio'),\n  OR: unsafeLocalizedString('Oristano'),\n  PD: unsafeLocalizedString('Padova'),\n  PA: unsafeLocalizedString('Palermo'),\n  PR: unsafeLocalizedString('Parma'),\n  PV: unsafeLocalizedString('Pavia'),\n  PG: unsafeLocalizedString('Perugia'),\n  PU: unsafeLocalizedString('Pesaro-Urbino'),\n  PE: unsafeLocalizedString('Pescara'),\n  PC: unsafeLocalizedString('Piacenza'),\n  PI: unsafeLocalizedString('Pisa'),\n  PT: unsafeLocalizedString('Pistoia'),\n  PN: unsafeLocalizedString('Pordenone'),\n  PZ: unsafeLocalizedString('Potenza'),\n  PO: unsafeLocalizedString('Prato'),\n  RG: unsafeLocalizedString('Ragusa'),\n  RA: unsafeLocalizedString('Ravenna'),\n  RC: unsafeLocalizedString('Reggio-Calabria'),\n  RE: unsafeLocalizedString('Reggio-Emilia'),\n  RI: unsafeLocalizedString('Rieti'),\n  RN: unsafeLocalizedString('Rimini'),\n  RM: unsafeLocalizedString('Roma'),\n  RO: unsafeLocalizedString('Rovigo'),\n  SA: unsafeLocalizedString('Salerno'),\n  SS: unsafeLocalizedString('Sassari'),\n  SV: unsafeLocalizedString('Savona'),\n  SI: unsafeLocalizedString('Siena'),\n  SR: unsafeLocalizedString('Siracusa'),\n  SO: unsafeLocalizedString('Sondrio'),\n  TA: unsafeLocalizedString('Taranto'),\n  TE: unsafeLocalizedString('Teramo'),\n  TR: unsafeLocalizedString('Terni'),\n  TO: unsafeLocalizedString('Torino'),\n  TP: unsafeLocalizedString('Trapani'),\n  TN: unsafeLocalizedString('Trento'),\n  TV: unsafeLocalizedString('Treviso'),\n  TS: unsafeLocalizedString('Trieste'),\n  UD: unsafeLocalizedString('Udine'),\n  VA: unsafeLocalizedString('Varese'),\n  VE: unsafeLocalizedString('Venezia'),\n  VB: unsafeLocalizedString('Verbania'),\n  VC: unsafeLocalizedString('Vercelli'),\n  VR: unsafeLocalizedString('Verona'),\n  VV: unsafeLocalizedString('Vibo-Valentia'),\n  VI: unsafeLocalizedString('Vicenza'),\n  VT: unsafeLocalizedString('Viterbo'),\n  EE: unsafeLocalizedString('Estero')\n}\n\nexport const Province = t.keyof(ProvinceValues)\nexport type Province = t.TypeOf<typeof Province>\n\nexport const CountryValues = {\n  AF: unsafeLocalizedString('Afghanistan'),\n  AL: unsafeLocalizedString('Albania'),\n  DZ: unsafeLocalizedString('Algeria'),\n  AD: unsafeLocalizedString('Andorra'),\n  AO: unsafeLocalizedString('Angola'),\n  AI: unsafeLocalizedString('Anguilla'),\n  AQ: unsafeLocalizedString('Antartide'),\n  AG: unsafeLocalizedString('Antigua e Barbuda'),\n  SA: unsafeLocalizedString('Arabia Saudita'),\n  AR: unsafeLocalizedString('Argentina'),\n  AM: unsafeLocalizedString('Armenia'),\n  AW: unsafeLocalizedString('Aruba'),\n  AU: unsafeLocalizedString('Australia'),\n  AT: unsafeLocalizedString('Austria'),\n  AZ: unsafeLocalizedString('Azerbaigian'),\n  BS: unsafeLocalizedString('Bahamas'),\n  BH: unsafeLocalizedString('Bahrein'),\n  BD: unsafeLocalizedString('Bangladesh'),\n  BB: unsafeLocalizedString('Barbados'),\n  BE: unsafeLocalizedString('Belgio'),\n  BZ: unsafeLocalizedString('Belize'),\n  BJ: unsafeLocalizedString('Benin'),\n  BM: unsafeLocalizedString('Bermuda'),\n  BT: unsafeLocalizedString('Bhutan'),\n  BY: unsafeLocalizedString('Bielorussia'),\n  MM: unsafeLocalizedString('Birmania'),\n  BO: unsafeLocalizedString('Bolivia'),\n  BA: unsafeLocalizedString('Bosnia ed Erzegovina'),\n  BW: unsafeLocalizedString('Botswana'),\n  BR: unsafeLocalizedString('Brasile'),\n  BN: unsafeLocalizedString('Brunei'),\n  BG: unsafeLocalizedString('Bulgaria'),\n  BF: unsafeLocalizedString('Burkina Faso'),\n  BI: unsafeLocalizedString('Burundi'),\n  KH: unsafeLocalizedString('Cambogia'),\n  CM: unsafeLocalizedString('Camerun'),\n  CA: unsafeLocalizedString('Canada'),\n  CV: unsafeLocalizedString('Capo Verde'),\n  TD: unsafeLocalizedString('Ciad'),\n  CL: unsafeLocalizedString('Cile'),\n  CN: unsafeLocalizedString('Cina'),\n  CY: unsafeLocalizedString('Cipro'),\n  VA: unsafeLocalizedString('Città del Vaticano'),\n  CO: unsafeLocalizedString('Colombia'),\n  KM: unsafeLocalizedString('Comore'),\n  KP: unsafeLocalizedString('Corea del Nord'),\n  KR: unsafeLocalizedString('Corea del Sud'),\n  CI: unsafeLocalizedString(\"Costa d'Avorio\"),\n  CR: unsafeLocalizedString('Costa Rica'),\n  HR: unsafeLocalizedString('Croazia'),\n  CU: unsafeLocalizedString('Cuba'),\n  CW: unsafeLocalizedString('Curaçao'),\n  DK: unsafeLocalizedString('Danimarca'),\n  DM: unsafeLocalizedString('Dominica'),\n  EC: unsafeLocalizedString('Ecuador'),\n  EG: unsafeLocalizedString('Egitto'),\n  SV: unsafeLocalizedString('El Salvador'),\n  AE: unsafeLocalizedString('Emirati Arabi Uniti'),\n  ER: unsafeLocalizedString('Eritrea'),\n  EE: unsafeLocalizedString('Estonia'),\n  ET: unsafeLocalizedString('Etiopia'),\n  FJ: unsafeLocalizedString('Figi'),\n  PH: unsafeLocalizedString('Filippine'),\n  FI: unsafeLocalizedString('Finlandia'),\n  FR: unsafeLocalizedString('Francia'),\n  GA: unsafeLocalizedString('Gabon'),\n  GM: unsafeLocalizedString('Gambia'),\n  GS: unsafeLocalizedString('Georgia del Sud e isole Sandwich meridionali'),\n  GE: unsafeLocalizedString('Georgia'),\n  DE: unsafeLocalizedString('Germania'),\n  GH: unsafeLocalizedString('Ghana'),\n  JM: unsafeLocalizedString('Giamaica'),\n  JP: unsafeLocalizedString('Giappone'),\n  GI: unsafeLocalizedString('Gibilterra'),\n  DJ: unsafeLocalizedString('Gibuti'),\n  JO: unsafeLocalizedString('Giordania'),\n  GR: unsafeLocalizedString('Grecia'),\n  GD: unsafeLocalizedString('Grenada'),\n  GL: unsafeLocalizedString('Groenlandia'),\n  GP: unsafeLocalizedString('Guadalupa'),\n  GU: unsafeLocalizedString('Guam'),\n  GT: unsafeLocalizedString('Guatemala'),\n  GG: unsafeLocalizedString('Guernsey'),\n  GQ: unsafeLocalizedString('Guinea Equatoriale'),\n  GW: unsafeLocalizedString('Guinea-Bissau'),\n  GN: unsafeLocalizedString('Guinea'),\n  GF: unsafeLocalizedString('Guyana francese'),\n  GY: unsafeLocalizedString('Guyana'),\n  HT: unsafeLocalizedString('Haiti'),\n  HN: unsafeLocalizedString('Honduras'),\n  HK: unsafeLocalizedString('Hong Kong'),\n  IN: unsafeLocalizedString('India'),\n  ID: unsafeLocalizedString('Indonesia'),\n  IR: unsafeLocalizedString('Iran'),\n  IQ: unsafeLocalizedString('Iraq'),\n  IE: unsafeLocalizedString('Irlanda'),\n  IS: unsafeLocalizedString('Islanda'),\n  BV: unsafeLocalizedString('Isola Bouvet'),\n  CX: unsafeLocalizedString('Isola del Natale'),\n  IM: unsafeLocalizedString('Isola di Man'),\n  NF: unsafeLocalizedString('Isola Norfolk'),\n  AX: unsafeLocalizedString('Isole Åland'),\n  BQ: unsafeLocalizedString('Isole BES'),\n  KY: unsafeLocalizedString('Isole Cayman'),\n  CC: unsafeLocalizedString('Isole Cocos e Keeling'),\n  CK: unsafeLocalizedString('Isole Cook'),\n  FO: unsafeLocalizedString('Isole Fær Øer'),\n  FK: unsafeLocalizedString('Isole Falkland'),\n  HM: unsafeLocalizedString('Isole Heard e McDonald'),\n  MP: unsafeLocalizedString('Isole Marianne Settentrionali'),\n  MH: unsafeLocalizedString('Isole Marshall'),\n  UM: unsafeLocalizedString('Isole minori esterne degli Stati Uniti'),\n  PN: unsafeLocalizedString('Isole Pitcairn'),\n  SB: unsafeLocalizedString('Isole Salomone'),\n  TC: unsafeLocalizedString('Isole Turks e Caicos'),\n  VI: unsafeLocalizedString('Isole Vergini americane'),\n  VG: unsafeLocalizedString('Isole Vergini britanniche'),\n  IL: unsafeLocalizedString('Israele'),\n  IT: unsafeLocalizedString('Italia'),\n  JE: unsafeLocalizedString('Jersey'),\n  KZ: unsafeLocalizedString('Kazakistan'),\n  KE: unsafeLocalizedString('Kenya'),\n  KG: unsafeLocalizedString('Kirghizistan'),\n  KI: unsafeLocalizedString('Kiribati'),\n  KW: unsafeLocalizedString('Kuwait'),\n  LA: unsafeLocalizedString('Laos'),\n  LS: unsafeLocalizedString('Lesotho'),\n  LV: unsafeLocalizedString('Lettonia'),\n  LB: unsafeLocalizedString('Libano'),\n  LR: unsafeLocalizedString('Liberia'),\n  LY: unsafeLocalizedString('Libia'),\n  LI: unsafeLocalizedString('Liechtenstein'),\n  LT: unsafeLocalizedString('Lituania'),\n  LU: unsafeLocalizedString('Lussemburgo'),\n  MO: unsafeLocalizedString('Macao'),\n  MK: unsafeLocalizedString('Macedonia del Nord'),\n  MG: unsafeLocalizedString('Madagascar'),\n  MW: unsafeLocalizedString('Malawi'),\n  MY: unsafeLocalizedString('Malaysia'),\n  MV: unsafeLocalizedString('Maldive'),\n  ML: unsafeLocalizedString('Mali'),\n  MT: unsafeLocalizedString('Malta'),\n  MA: unsafeLocalizedString('Marocco'),\n  MQ: unsafeLocalizedString('Martinica'),\n  MR: unsafeLocalizedString('Mauritania'),\n  MU: unsafeLocalizedString('Mauritius'),\n  YT: unsafeLocalizedString('Mayotte'),\n  MX: unsafeLocalizedString('Messico'),\n  MD: unsafeLocalizedString('Moldavia'),\n  MC: unsafeLocalizedString('Monaco'),\n  MN: unsafeLocalizedString('Mongolia'),\n  ME: unsafeLocalizedString('Montenegro'),\n  MS: unsafeLocalizedString('Montserrat'),\n  MZ: unsafeLocalizedString('Mozambico'),\n  NA: unsafeLocalizedString('Namibia'),\n  NR: unsafeLocalizedString('Nauru'),\n  NP: unsafeLocalizedString('Nepal'),\n  NI: unsafeLocalizedString('Nicaragua'),\n  NE: unsafeLocalizedString('Niger'),\n  NG: unsafeLocalizedString('Nigeria'),\n  NU: unsafeLocalizedString('Niue'),\n  NO: unsafeLocalizedString('Norvegia'),\n  NC: unsafeLocalizedString('Nuova Caledonia'),\n  NZ: unsafeLocalizedString('Nuova Zelanda'),\n  OM: unsafeLocalizedString('Oman'),\n  NL: unsafeLocalizedString('Paesi Bassi'),\n  PK: unsafeLocalizedString('Pakistan'),\n  PW: unsafeLocalizedString('Palau'),\n  PA: unsafeLocalizedString('Panama'),\n  PG: unsafeLocalizedString('Papua Nuova Guinea'),\n  PY: unsafeLocalizedString('Paraguay'),\n  PE: unsafeLocalizedString('Perù'),\n  PF: unsafeLocalizedString('Polinesia Francese'),\n  PL: unsafeLocalizedString('Polonia'),\n  PR: unsafeLocalizedString('Porto Rico'),\n  PT: unsafeLocalizedString('Portogallo'),\n  QA: unsafeLocalizedString('Qatar'),\n  GB: unsafeLocalizedString('Regno Unito'),\n  CZ: unsafeLocalizedString('Repubblica Ceca'),\n  CF: unsafeLocalizedString('Repubblica Centrafricana'),\n  CG: unsafeLocalizedString('Repubblica del Congo'),\n  CD: unsafeLocalizedString('Repubblica Democratica del Congo'),\n  TW: unsafeLocalizedString('Repubblica di Cina'),\n  DO: unsafeLocalizedString('Repubblica Dominicana'),\n  RE: unsafeLocalizedString('Riunione'),\n  RO: unsafeLocalizedString('Romania'),\n  RW: unsafeLocalizedString('Ruanda'),\n  RU: unsafeLocalizedString('Russia'),\n  EH: unsafeLocalizedString('Sahara Occidentale'),\n  KN: unsafeLocalizedString('Saint Kitts e Nevis'),\n  VC: unsafeLocalizedString('Saint Vincent e Grenadine'),\n  BL: unsafeLocalizedString('Saint-Barthélemy'),\n  MF: unsafeLocalizedString('Saint-Martin'),\n  PM: unsafeLocalizedString('Saint-Pierre e Miquelon'),\n  AS: unsafeLocalizedString('Samoa Americane'),\n  WS: unsafeLocalizedString('Samoa'),\n  SM: unsafeLocalizedString('San Marino'),\n  SH: unsafeLocalizedString(\n    \"Sant'Elena, Isola di Ascensione e Tristan da Cunha\"\n  ),\n  LC: unsafeLocalizedString('Santa Lucia'),\n  ST: unsafeLocalizedString('São Tomé e Príncipe'),\n  SN: unsafeLocalizedString('Senegal'),\n  RS: unsafeLocalizedString('Serbia'),\n  SC: unsafeLocalizedString('Seychelles'),\n  SL: unsafeLocalizedString('Sierra Leone'),\n  SG: unsafeLocalizedString('Singapore'),\n  SX: unsafeLocalizedString('Sint Maarten'),\n  SY: unsafeLocalizedString('Siria'),\n  SK: unsafeLocalizedString('Slovacchia'),\n  SI: unsafeLocalizedString('Slovenia'),\n  SO: unsafeLocalizedString('Somalia'),\n  ES: unsafeLocalizedString('Spagna'),\n  LK: unsafeLocalizedString('Sri Lanka'),\n  FM: unsafeLocalizedString('Stati Federati di Micronesia'),\n  US: unsafeLocalizedString(\"Stati Uniti d'America\"),\n  PS: unsafeLocalizedString('Stato di Palestina'),\n  ZA: unsafeLocalizedString('Sudafrica'),\n  SS: unsafeLocalizedString('Sudan del Sud'),\n  SD: unsafeLocalizedString('Sudan'),\n  SR: unsafeLocalizedString('Suriname'),\n  SJ: unsafeLocalizedString('Svalbard e Jan Mayen'),\n  SE: unsafeLocalizedString('Svezia'),\n  CH: unsafeLocalizedString('Svizzera'),\n  SZ: unsafeLocalizedString('Swaziland'),\n  TJ: unsafeLocalizedString('Tagikistan'),\n  TZ: unsafeLocalizedString('Tanzania'),\n  IO: unsafeLocalizedString(\"Territori Britannici dell'Oceano Indiano\"),\n  TF: unsafeLocalizedString('Territori Francesi del Sud'),\n  TH: unsafeLocalizedString('Thailandia'),\n  TL: unsafeLocalizedString('Timor Est'),\n  TG: unsafeLocalizedString('Togo'),\n  TK: unsafeLocalizedString('Tokelau'),\n  TO: unsafeLocalizedString('Tonga'),\n  TT: unsafeLocalizedString('Trinidad e Tobago'),\n  TN: unsafeLocalizedString('Tunisia'),\n  TR: unsafeLocalizedString('Turchia'),\n  TM: unsafeLocalizedString('Turkmenistan'),\n  TV: unsafeLocalizedString('Tuvalu'),\n  UA: unsafeLocalizedString('Ucraina'),\n  UG: unsafeLocalizedString('Uganda'),\n  HU: unsafeLocalizedString('Ungheria'),\n  UY: unsafeLocalizedString('Uruguay'),\n  UZ: unsafeLocalizedString('Uzbekistan'),\n  VU: unsafeLocalizedString('Vanuatu'),\n  VE: unsafeLocalizedString('Venezuela'),\n  VN: unsafeLocalizedString('Vietnam'),\n  WF: unsafeLocalizedString('Wallis e Futuna'),\n  YE: unsafeLocalizedString('Yemen'),\n  ZM: unsafeLocalizedString('Zambia'),\n  ZW: unsafeLocalizedString('Zimbabwe')\n}\n\nexport const Country = t.keyof(CountryValues)\nexport type Country = t.TypeOf<typeof Country>\n\nexport const ClientCreationCommonInput = t.type(\n  {\n    address_country: Country,\n    address_province: Province,\n    address_city: NonEmptyString,\n    address_zip: NonEmptyString,\n    address_street: NonEmptyString,\n    address_street_number: optionFromNullable(NonEmptyString),\n    address_email: EmailString\n  },\n  'ClientCreationCommonInput'\n)\nexport type ClientCreationCommonInput = t.TypeOf<\n  typeof ClientCreationCommonInput\n>\n\nexport const PrivateClientCreationInput = t.intersection([\n  ClientCreationCommonInput,\n  t.type(\n    {\n      type: t.literal('PRIVATE'),\n      fiscal_code: NonEmptyString,\n      first_name: NonEmptyString,\n      last_name: NonEmptyString\n    },\n    'PrivateClientCreationInput'\n  )\n])\nexport type PrivateClientCreationInput = t.TypeOf<\n  typeof PrivateClientCreationInput\n>\n\nexport const BusinessClientCreationInput = t.intersection(\n  [\n    ClientCreationCommonInput,\n    t.type({\n      type: t.literal('BUSINESS'),\n      country_code: Country,\n      vat_number: NonEmptyString,\n      business_name: NonEmptyString\n    })\n  ],\n  'BusinessClientCreationInput'\n)\nexport type BusinessClientCreationInput = t.TypeOf<\n  typeof BusinessClientCreationInput\n>\n\nexport const ClientCreationInput = t.union(\n  [PrivateClientCreationInput, BusinessClientCreationInput],\n  'ClientCreationInput'\n)\nexport type ClientCreationInput = t.TypeOf<typeof ClientCreationInput>\n\nexport function foldClientCreationInput<T>(\n  whenPrivate: (input: PrivateClientCreationInput) => T,\n  whenBusiness: (input: BusinessClientCreationInput) => T\n): (input: ClientCreationInput) => T {\n  return input => {\n    switch (input.type) {\n      case 'PRIVATE':\n        return whenPrivate(input)\n      case 'BUSINESS':\n        return whenBusiness(input)\n    }\n  }\n}\n","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/ClientForm.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/ClientForm.tsx",["406"],"/Users/mconst/Documents/Working/cooler/client/src/misc/clientLinters.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/DateTimePicker.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/DateTimePicker.tsx",["407"],"import { boolean, option, taskEither } from 'fp-ts'\nimport { constNull, constVoid, flow, pipe } from 'fp-ts/function'\nimport { FC, useEffect, useRef, useState } from 'react'\nimport {\n  a18n,\n  formatDate,\n  formatDateTime,\n  formatTime,\n  localizedMonthNames\n} from '../../../../a18n'\nimport {\n  LocalizedString,\n  Month,\n  MinuteFromString\n} from '../../../../globalDomain'\nimport { Button } from '../../../Button/Button/Button'\nimport { Buttons } from '../../../Button/Buttons/Buttons'\nimport { Modal } from '../../../Modal/Modal'\nimport { FieldProps, useForm } from '../../useForm'\nimport { Input } from '../Input/Input'\nimport './DateTimePicker.scss'\nimport * as t from 'io-ts'\nimport { calendar, time } from 'ionicons/icons'\nimport { toSelectState } from '../Select/Select'\nimport * as validators from '../../validators'\nimport { leadZero, validateDay, validateHours, validateYear } from './utils'\nimport { DatePickerForm } from './DatePickerForm'\nimport { TimePickerForm } from './TimePickerForm'\n\ninterface Props extends FieldProps<Date> {\n  label: LocalizedString\n  mode?: DateTimePickerMode\n  disabled?: boolean\n}\n\nconst DateTimePickerMode = t.keyof(\n  {\n    date: true,\n    time: true,\n    datetime: true\n  },\n  'DateTimePickerOptions'\n)\nexport type DateTimePickerMode = t.TypeOf<typeof DateTimePickerMode>\n\nfunction foldDateTimePickerMode<T>(\n  whenDate: () => T,\n  whenTime: () => T,\n  whenDateTime: () => T\n): (mode: DateTimePickerMode) => T {\n  return mode => {\n    switch (mode) {\n      case 'date':\n        return whenDate()\n      case 'time':\n        return whenTime()\n      case 'datetime':\n        return whenDateTime()\n    }\n  }\n}\n\ntype DateTimePickerView = 'date' | 'time'\n\nfunction foldDateTimePickerView<T>(\n  whenDate: () => T,\n  whenTime: () => T\n): (view: DateTimePickerView) => T {\n  return view => {\n    switch (view) {\n      case 'date':\n        return whenDate()\n      case 'time':\n        return whenTime()\n    }\n  }\n}\n\nfunction getInitialValues(date: Date) {\n  return {\n    year: date.getFullYear().toString(10),\n    month: toSelectState(\n      localizedMonthNames,\n      option.some(date.getMonth() as Month)\n    ),\n    day: date.getDate().toString(10),\n    hours: leadZero(date.getHours().toString(10)),\n    minutes: leadZero(date.getMinutes().toString(10))\n  }\n}\n\nexport const DateTimePicker: FC<Props> = ({ mode = 'datetime', ...props }) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const { fieldProps, setValues, submit } = useForm(\n    {\n      initialValues: getInitialValues(props.value),\n      validators: () => ({\n        year: flow(validateYear, taskEither.fromEither),\n        month: validators.fromSelectState(a18n`This is not a valid month`),\n        day: flow(validateDay, taskEither.fromEither),\n        hours: flow(validateHours, taskEither.fromEither),\n        minutes: validators.fromCodec(\n          MinuteFromString,\n          a18n`This is not a valid value for minutes`\n        )\n      }),\n      linters: () => ({})\n    },\n    {\n      onSubmit: data =>\n        taskEither.fromIO(() =>\n          props.onChange(\n            new Date(\n              data.year,\n              data.month as Month,\n              data.day,\n              data.hours,\n              data.minutes\n            )\n          )\n        )\n    }\n  )\n\n  const [currentView, setCurrentView] = useState<DateTimePickerView>(\n    mode === 'time' ? 'time' : 'date'\n  )\n\n  const dateInputRef = useRef<HTMLInputElement>(null)\n  const timeInputRef = useRef<HTMLInputElement>(null)\n\n  const isPickingDate = mode === 'date' || mode === 'datetime'\n  const isPickingTime = mode === 'time' || mode === 'datetime'\n\n  const confirm = () => {\n    setCurrentView('date')\n    setIsOpen(false)\n    submit()\n  }\n\n  const cancel = () => {\n    setCurrentView('date')\n    setIsOpen(false)\n    setValues(getInitialValues(props.value))\n  }\n\n  const inputValue = pipe(\n    mode,\n    foldDateTimePickerMode(\n      () => formatDate(props.value),\n      () => formatTime(props.value),\n      () => formatDateTime(props.value)\n    )\n  )\n\n  const onInputFocus = () => {\n    if (!props.disabled) {\n      setIsOpen(true)\n\n      window.setTimeout(\n        () =>\n          pipe(\n            currentView,\n            foldDateTimePickerView(\n              () => {\n                dateInputRef.current?.focus()\n                dateInputRef.current?.select()\n              },\n              () => {\n                timeInputRef.current?.focus()\n                timeInputRef.current?.select()\n              }\n            )\n          ),\n        200\n      )\n    }\n  }\n\n  const onDaySelected = () => {\n    if (mode === 'datetime') {\n      setCurrentView('time')\n    }\n  }\n\n  useEffect(() => {\n    setCurrentView(mode === 'time' ? 'time' : 'date')\n  }, [mode])\n\n  useEffect(() => {\n    window.setTimeout(\n      () =>\n        pipe(\n          currentView,\n          foldDateTimePickerView(\n            () => {\n              dateInputRef.current?.focus()\n              dateInputRef.current?.select()\n            },\n            () => {\n              timeInputRef.current?.focus()\n              timeInputRef.current?.select()\n            }\n          )\n        ),\n      200\n    )\n  }, [currentView])\n\n  return (\n    <div className=\"DateTimePicker\">\n      <Input\n        {...props}\n        className=\"DateTimePickerInput\"\n        value={inputValue}\n        onChange={constVoid}\n        readOnly\n        onFocus={onInputFocus}\n        disabled={props.disabled}\n      />\n      <Modal\n        className=\"DateTimePickerModal\"\n        isOpen={isOpen}\n        onClose={cancel}\n        framed\n      >\n        {pipe(\n          isPickingDate && isPickingTime,\n          boolean.fold(constNull, () => (\n            <Buttons>\n              <Button\n                type=\"button\"\n                label={a18n`Date`}\n                icon={option.some(calendar)}\n                action={() => setCurrentView('date')}\n                flat\n                color={pipe(\n                  currentView,\n                  foldDateTimePickerView(\n                    () => 'primary',\n                    () => 'default'\n                  )\n                )}\n              />\n              <Button\n                type=\"button\"\n                label={a18n`Time`}\n                icon={option.some(time)}\n                action={() => setCurrentView('time')}\n                flat\n                color={pipe(\n                  currentView,\n                  foldDateTimePickerView(\n                    () => 'default',\n                    () => 'primary'\n                  )\n                )}\n              />\n            </Buttons>\n          ))\n        )}\n        {pipe(\n          currentView,\n          foldDateTimePickerView(\n            () => (\n              <DatePickerForm\n                inputName={props.name}\n                latestValidDate={props.value}\n                yearFieldProps={fieldProps('year')}\n                monthFieldProps={fieldProps('month')}\n                dayFieldProps={fieldProps('day')}\n                onDaySelected={onDaySelected}\n                ref={dateInputRef}\n              />\n            ),\n            () => (\n              <TimePickerForm\n                inputName={props.name}\n                hoursFieldProps={fieldProps('hours')}\n                minutesFieldProps={fieldProps('minutes')}\n                onConfirm={confirm}\n                ref={timeInputRef}\n              />\n            )\n          )\n        )}\n        <Buttons>\n          <Button\n            type=\"button\"\n            label={a18n`Confirm`}\n            action={confirm}\n            icon={option.none}\n            color=\"primary\"\n            flat\n          />\n          <Button\n            type=\"button\"\n            label={a18n`Cancel`}\n            action={cancel}\n            icon={option.none}\n            flat\n          />\n        </Buttons>\n      </Modal>\n    </div>\n  )\n}\n","/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/CounterSelect.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/DaysGrid.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/effects/useCombinedRef.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/TextArea.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/TextArea/TextArea.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/ProjectForm.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/ProjectForm.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Loading.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Loading/Loading.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/Toggle.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/Toggle/Toggle.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/AsyncSelect.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/ToggleButton.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/ToggleButton.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Button/args.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/args.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/TaskForm.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/TaskForm.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/Input/WeekdayRepetition.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/WeekdayRepetition/WeekdayRepetition.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/TimesheetForm.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/TimesheetForm.tsx",["408"],"import { FC } from 'react'\nimport { a18n } from '../../../a18n'\nimport * as t from 'io-ts'\nimport {\n  LocalizedString,\n  PositiveInteger,\n  PositiveIntegerFromString\n} from '../../../globalDomain'\nimport { TaskEither } from 'fp-ts/TaskEither'\nimport { useForm } from '../useForm'\nimport * as validators from '../validators'\nimport { option } from 'fp-ts'\nimport { toSelectState } from '../Input/Select/Select'\nimport { Form } from '../Form'\nimport { AsyncSelect } from '../Input/AsyncSelect'\nimport { SimpleSelect } from '../Input/SimpleSelect'\nimport { DateTimePicker } from '../Input/DateTimePicker/DateTimePicker'\nimport { constFalse, constTrue, pipe } from 'fp-ts/function'\nimport { download } from 'ionicons/icons'\n\nconst TimePeriodValues = {\n  week: a18n`This week`,\n  month: a18n`This month`,\n  custom: a18n`Custom`\n}\n\nconst TimePeriod = t.keyof(TimePeriodValues, 'TimePeriod')\ntype TimePeriod = t.TypeOf<typeof TimePeriod>\n\nfunction foldTimePeriod<T>(\n  whenWeek: () => T,\n  whenMonth: () => T,\n  whenCustom: () => T\n): (timePeriod: TimePeriod) => T {\n  return timePeriod => {\n    switch (timePeriod) {\n      case 'week':\n        return whenWeek()\n      case 'month':\n        return whenMonth()\n      case 'custom':\n        return whenCustom()\n    }\n  }\n}\n\nexport interface FormData {\n  timePeriod: TimePeriod\n  project: PositiveInteger\n  since: Date\n  to: Date\n}\n\ninterface Props {\n  findProjects: (\n    input: string\n  ) => TaskEither<LocalizedString, Record<PositiveInteger, LocalizedString>>\n  onSubmit: (data: FormData) => TaskEither<LocalizedString, unknown>\n}\n\nexport const TimesheetForm: FC<Props> = props => {\n  const { fieldProps, formError, submit, values, setValues } = useForm(\n    {\n      initialValues: {\n        project: toSelectState<PositiveInteger>({}, option.none),\n        timePeriod: 'week' as TimePeriod,\n        since: getLastMonday(),\n        to: getNextFriday()\n      },\n      linters: () => ({}),\n      validators: () => ({\n        project: validators.fromSelectState<PositiveInteger>(\n          a18n`Please choose a project`\n        )\n      })\n    },\n    {\n      onSubmit: props.onSubmit\n    }\n  )\n\n  const onTimePeriodChange = (timePeriod: TimePeriod) => {\n    setValues({\n      timePeriod,\n      since: pipe(\n        timePeriod,\n        foldTimePeriod(\n          getLastMonday,\n          getFirstDayOfThisMonth,\n          () => values.since\n        )\n      ),\n      to: pipe(\n        timePeriod,\n        foldTimePeriod(getNextFriday, getLastDayOfThisMonth, () => values.to)\n      )\n    })\n  }\n\n  return (\n    <Form\n      title={a18n`New Timesheet`}\n      formError={formError}\n      submit={submit}\n      submitLabel={a18n`Download`}\n      submitIcon={download}\n    >\n      <AsyncSelect\n        label={a18n`Project`}\n        {...fieldProps('project')}\n        onQueryChange={props.findProjects}\n        emptyPlaceholder={a18n`No projects found`}\n        codec={PositiveIntegerFromString}\n      />\n      <SimpleSelect\n        label={a18n`Time period`}\n        {...fieldProps('timePeriod')}\n        options={TimePeriodValues}\n        onChange={onTimePeriodChange}\n      />\n      <DateTimePicker\n        mode=\"date\"\n        label={a18n`From`}\n        {...fieldProps('since')}\n        disabled={pipe(\n          values.timePeriod,\n          foldTimePeriod(constTrue, constTrue, constFalse)\n        )}\n      />\n      <DateTimePicker\n        mode=\"date\"\n        label={a18n`To`}\n        {...fieldProps('to')}\n        disabled={pipe(\n          values.timePeriod,\n          foldTimePeriod(constTrue, constTrue, constFalse)\n        )}\n      />\n    </Form>\n  )\n}\n\nfunction getFirstDayOfThisMonth(): Date {\n  const now = new Date()\n  return new Date(now.getFullYear(), now.getMonth(), 1)\n}\n\nfunction getLastDayOfThisMonth(): Date {\n  const now = new Date()\n  const firstDayOfNextMonth = new Date(now.getFullYear(), now.getMonth() + 1, 1)\n  return new Date(firstDayOfNextMonth.getTime() - 1)\n}\n\nfunction getLastMonday(): Date {\n  const now = new Date()\n  return new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate() - now.getDay() + 1\n  )\n}\n\nfunction getNextFriday(): Date {\n  const now = new Date()\n  return new Date(\n    new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate() - now.getDay() + 6\n    ).getTime() - 1\n  )\n}\n","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/SimpleSelect.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Pages/Profile/UserData.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/UserData.tsx",["409"],"/Users/mconst/Documents/Working/cooler/client/src/stories/Pages/Profile/CurrentSituation.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/CurrentSituation.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/Select/Select.tsx",["410"],"import { array, boolean, either, nonEmptyArray, option, record } from 'fp-ts'\nimport {\n  constFalse,\n  constTrue,\n  constUndefined,\n  constVoid,\n  flow,\n  identity,\n  pipe\n} from 'fp-ts/function'\nimport { Option } from 'fp-ts/Option'\nimport { caretDownSharp } from 'ionicons/icons'\nimport {\n  Dispatch,\n  FocusEvent,\n  forwardRef,\n  PropsWithoutRef,\n  ReactNode,\n  Ref,\n  RefAttributes,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react'\nimport { useCombinedRefs } from '../../../../effects/useCombinedRef'\nimport { Color, LocalizedString } from '../../../../globalDomain'\nimport { composeClassName } from '../../../../misc/composeClassName'\nimport { Icon } from '../../../Icon/Icon'\nimport { List, RoutedItem } from '../../../List/List'\nimport { FieldProps } from '../../useForm'\nimport { Input } from '../Input/Input'\nimport { Loading } from '../../../Loading/Loading'\nimport './Select.scss'\nimport * as t from 'io-ts'\n\ntype Index = string | number | symbol\n\nexport type SelectState<T extends Index> = [Option<T>, LocalizedString]\n\nexport function toSelectState<T extends Index>(\n  options: Record<T, LocalizedString>,\n  value: Option<T>\n): SelectState<T> {\n  return [\n    value,\n    pipe(\n      value,\n      option.map(value => options[value]),\n      option.getOrElse(() => '' as LocalizedString)\n    )\n  ]\n}\n\nexport function useSelectState<T extends Index>(\n  options: Record<T, LocalizedString>,\n  initialValue: Option<T>\n): [SelectState<T>, Dispatch<SetStateAction<SelectState<T>>>] {\n  return useState(toSelectState(options, initialValue))\n}\n\nexport function getOptionValue<T extends Index>(\n  option: SelectState<T>\n): Option<T> {\n  return option[0]\n}\n\nexport function getOptionLabel<T extends Index>(\n  option: SelectState<T>\n): LocalizedString {\n  return option[1]\n}\n\ninterface CommonSelectProps<T extends Index>\n  extends FieldProps<SelectState<T>> {\n  label: LocalizedString\n  className?: string\n  onFocus?: (e: FocusEvent) => void\n  onBlur?: (e: FocusEvent) => void\n  disabled?: boolean\n  children?: ReactNode\n  codec: t.Type<T, string, unknown>\n}\n\nexport interface DefaultSelectProps<T extends Index>\n  extends CommonSelectProps<T> {\n  type: 'default'\n  emptyPlaceholder: LocalizedString\n  options: Record<T, LocalizedString>\n}\n\nexport interface UnsearchableSelectProps<T extends Index>\n  extends CommonSelectProps<T> {\n  type: 'unsearchable'\n  options: Record<T, LocalizedString>\n}\n\nexport interface AsyncSelectProps<T extends Index>\n  extends CommonSelectProps<T> {\n  type: 'async'\n  emptyPlaceholder: LocalizedString\n  onQueryChange: (query: string) => void\n  isLoading: boolean\n  options: Partial<Record<T, LocalizedString>>\n}\n\nexport type SelectProps<T extends Index> =\n  | DefaultSelectProps<T>\n  | UnsearchableSelectProps<T>\n  | AsyncSelectProps<T>\n\nfunction foldSelectProps<T extends Index, O>(\n  whenDefault: (props: DefaultSelectProps<T>) => O,\n  whenUnsearchable: (props: UnsearchableSelectProps<T>) => O,\n  whenAsync: (props: AsyncSelectProps<T>) => O\n): (props: SelectProps<T>) => O {\n  return props => {\n    switch (props.type) {\n      case 'default':\n        return whenDefault(props)\n      case 'unsearchable':\n        return whenUnsearchable(props)\n      case 'async':\n        return whenAsync(props)\n    }\n  }\n}\n\ntype Select = <T extends Index>(\n  props: PropsWithoutRef<SelectProps<T>> & RefAttributes<HTMLInputElement>\n) => JSX.Element\n\n// @ts-ignore\nexport const Select: Select = forwardRef(\n  <T extends Index>(\n    { className = '', ...props }: SelectProps<T>,\n    ref: Ref<HTMLInputElement> = null\n  ) => {\n    const { onChange, onBlur: onBlurProp } = props\n    const [isOpen, setIsOpen] = useState(false)\n    const [highlightedItem, setHighlightedItem] = useState<Option<string>>(\n      option.none\n    )\n    const innerRef = useRef<HTMLInputElement>(null)\n    const inputRef = useCombinedRefs(innerRef, ref)\n\n    const options = pipe(\n      props,\n      foldSelectProps(\n        ({ options }) => {\n          const regex = new RegExp(getOptionLabel(props.value), 'i')\n\n          return pipe(\n            options,\n            record.filter(label => regex.test(label))\n          ) as Record<T, LocalizedString>\n        },\n        () => props.options,\n        () => props.options\n      )\n    )\n\n    const onInputChange = (input: LocalizedString): void => {\n      setIsOpen(true)\n      setHighlightedItem(option.none)\n\n      pipe(\n        Object.entries(options) as [string, LocalizedString][],\n        array.findFirst(([, label]) => label === input),\n        option.fold<[string, LocalizedString], [Option<T>, LocalizedString]>(\n          () => [option.none, input],\n          ([value, label]) =>\n            pipe(\n              value,\n              props.codec.decode,\n              either.fold(\n                () => [option.none, input],\n                value => [option.some(value), label]\n              )\n            )\n        ),\n        props.onChange\n      )\n\n      pipe(\n        props,\n        foldSelectProps(constVoid, constVoid, ({ onQueryChange }) =>\n          onQueryChange(input)\n        )\n      )\n    }\n\n    const onFocus = (e?: FocusEvent) => {\n      e && props.onFocus?.(e)\n      setIsOpen(true)\n\n      pipe(\n        props,\n        foldSelectProps(\n          () => inputRef.current?.select(),\n          constVoid,\n          () => inputRef.current?.select()\n        )\n      )\n    }\n\n    const onBlur = useCallback(\n      (e?: FocusEvent) => {\n        setHighlightedItem(option.none)\n        e && onBlurProp?.(e)\n\n        if (record.size(options) === 1) {\n          const [[value, label]] = Object.entries(options) as [\n            [T, LocalizedString]\n          ]\n\n          pipe(\n            value,\n            props.codec.decode,\n            either.fold(constVoid, value =>\n              onChange([option.some(value), label])\n            )\n          )\n        }\n\n        window.setTimeout(() => {\n          setIsOpen(false)\n        }, 150)\n      },\n      [options, onChange, onBlurProp, props.codec]\n    )\n\n    const iconColor: Color = pipe(\n      props.error,\n      option.fold(\n        () =>\n          pipe(\n            props.warning,\n            option.fold(\n              () =>\n                pipe(\n                  isOpen,\n                  boolean.fold(\n                    () => 'default',\n                    () => 'primary'\n                  )\n                ),\n              () => 'warning'\n            )\n          ),\n        () => 'danger'\n      )\n    )\n\n    const openClassName = isOpen ? 'open' : ''\n\n    useEffect(() => {\n      const inputElement = inputRef.current\n\n      const onKeyUp = (e: KeyboardEvent) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        if (e.code === 'Escape') {\n          onBlur()\n        } else if (e.code === 'ArrowDown') {\n          const items = Object.keys(options)\n\n          setHighlightedItem(\n            flow(\n              option.fold(\n                () => pipe(items[0], option.fromNullable),\n                highlightedItem =>\n                  pipe(\n                    items,\n                    array.findIndex(key => key === highlightedItem),\n                    option.map(n => n + 1),\n                    option.map(n => items[n]),\n                    option.map(key => key || items[0])\n                  )\n              )\n            )\n          )\n        } else if (e.code === 'ArrowUp') {\n          const items = Object.keys(options)\n\n          setHighlightedItem(\n            flow(\n              option.fold(\n                () => pipe(items[items.length - 1], option.fromNullable),\n                highlightedItem =>\n                  pipe(\n                    items,\n                    array.findIndex(key => key === highlightedItem),\n                    option.map(n => n - 1),\n                    option.map(n => items[n]),\n                    option.map(key => key || items[items.length - 1])\n                  )\n              )\n            )\n          )\n        }\n      }\n\n      if (isOpen) {\n        inputElement && inputElement.addEventListener('keyup', onKeyUp)\n      }\n\n      return () => {\n        inputElement && inputElement.removeEventListener('keyup', onKeyUp)\n      }\n    }, [inputRef, isOpen, onBlur, options])\n\n    useEffect(() => {\n      const inputElement = inputRef.current\n\n      const onKeyUp = (e: KeyboardEvent) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        if (e.code === 'Enter') {\n          pipe(\n            highlightedItem,\n            option.fold(constVoid, highlightedItem => {\n              pipe(\n                highlightedItem,\n                props.codec.decode,\n                either.fold(constVoid, value =>\n                  onChange([option.some(value), options[value]!])\n                )\n              )\n\n              onBlur()\n            })\n          )\n        }\n      }\n\n      if (isOpen && option.isSome(highlightedItem)) {\n        inputElement && inputElement.addEventListener('keyup', onKeyUp)\n      }\n\n      return () => {\n        inputElement && inputElement.removeEventListener('keyup', onKeyUp)\n      }\n    }, [\n      isOpen,\n      options,\n      highlightedItem,\n      onChange,\n      onBlur,\n      inputRef,\n      props.codec\n    ])\n\n    const optionItems = pipe(\n      Object.entries(options) as [string, LocalizedString][],\n      array.map(\n        ([value, label]): RoutedItem => ({\n          key: value,\n          type: 'routed',\n          label: option.none,\n          content: label,\n          description: option.none,\n          className: pipe(\n            highlightedItem,\n            option.fold(constUndefined, highlightedItem =>\n              highlightedItem === value ? 'highlighted' : undefined\n            )\n          ),\n          action: () => {\n            pipe(\n              value,\n              props.codec.decode,\n              either.fold(constVoid, value =>\n                props.onChange([option.some(value), label])\n              )\n            )\n\n            setHighlightedItem(option.none)\n          }\n        })\n      ),\n      nonEmptyArray.fromArray,\n      option.fold(() => {\n        const getEmptyItem = (content: LocalizedString): RoutedItem => ({\n          key: '',\n          type: 'routed',\n          label: option.none,\n          content,\n          description: option.none,\n          className: 'empty',\n          action: constVoid\n        })\n\n        return pipe(\n          props,\n          foldSelectProps(\n            ({ emptyPlaceholder }) => [getEmptyItem(emptyPlaceholder)],\n            () => [],\n            ({ emptyPlaceholder }) => [getEmptyItem(emptyPlaceholder)]\n          )\n        )\n      }, identity)\n    )\n\n    return (\n      <div className={composeClassName('Select', className, openClassName)}>\n        <div className=\"input\">\n          <Input\n            name={props.name}\n            label={props.label}\n            ref={inputRef}\n            value={getOptionLabel(props.value)}\n            onChange={input => onInputChange(input as LocalizedString)}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            autoComplete=\"off\"\n            readOnly={pipe(\n              props,\n              foldSelectProps(constFalse, constTrue, constFalse)\n            )}\n            disabled={props.disabled}\n            error={props.error}\n            warning={props.warning}\n          >\n            {props.children}\n            {pipe(\n              props,\n              foldSelectProps(\n                constFalse,\n                constFalse,\n                ({ isLoading }) => !!isLoading\n              ),\n              boolean.fold(\n                () => (\n                  <Icon\n                    className=\"arrowIcon\"\n                    src={caretDownSharp}\n                    size=\"small\"\n                    color={iconColor}\n                  />\n                ),\n                () => <Loading size=\"small\" color={iconColor} />\n              )\n            )}\n          </Input>\n        </div>\n        <div className=\"options\">\n          <List heading={option.none} items={optionItems} />\n        </div>\n      </div>\n    )\n  }\n)\n","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/CounterSelect/CounterSelect.tsx",["411"],"import { boolean, option } from 'fp-ts'\nimport { chevronBack, chevronForward } from 'ionicons/icons'\nimport { Color, LocalizedString } from '../../../../globalDomain'\nimport { Button } from '../../../Button/Button/Button'\nimport {\n  Select,\n  SelectState,\n  getOptionValue,\n  UnsearchableSelectProps\n} from '../Select/Select'\nimport './CounterSelect.scss'\nimport { constVoid, flow, pipe } from 'fp-ts/function'\nimport { composeClassName } from '../../../../misc/composeClassName'\nimport {\n  forwardRef,\n  PropsWithoutRef,\n  Ref,\n  RefAttributes,\n  useState\n} from 'react'\n\ninterface Props<T extends string | number | symbol>\n  extends Omit<UnsearchableSelectProps<T>, 'type'> {\n  onBack: (currentOption: T) => T\n  onForward: (currentValue: T) => T\n}\n\ntype CounterSelect = <T extends number>(\n  props: PropsWithoutRef<Props<T>> & RefAttributes<HTMLInputElement>\n) => JSX.Element\n\n// @ts-ignore\nexport const CounterSelect: CounterSelect = forwardRef(\n  <T extends number>(\n    { className = '', ...props }: Props<T>,\n    ref?: Ref<HTMLInputElement>\n  ) => {\n    const [isFocus, setIsFocus] = useState(false)\n\n    const disabled =\n      option.isNone(getOptionValue(props.value)) ||\n      option.isSome(props.error) ||\n      props.disabled\n\n    const onBack = () => {\n      const keys = Object.keys(props.options)\n\n      pipe(\n        getOptionValue(props.value),\n        option.map(flow(props.onBack, props.codec.encode)),\n        option.map(\n          flow(\n            option.fromPredicate(nextKey => keys.includes(nextKey)),\n            option.getOrElse(() => keys[keys.length - 1])\n          )\n        ),\n        option.chain(flow(props.codec.decode, option.fromEither)),\n        option.map(\n          value => [option.some(value), props.options[value]] as SelectState<T>\n        ),\n        option.fold(constVoid, props.onChange)\n      )\n    }\n\n    const onForward = () => {\n      const keys = Object.keys(props.options)\n\n      pipe(\n        getOptionValue(props.value),\n        option.map(flow(props.onForward, props.codec.encode)),\n        option.map(\n          flow(\n            option.fromPredicate(nextKey => keys.includes(nextKey)),\n            option.getOrElse(() => keys[0])\n          )\n        ),\n        option.chain(flow(props.codec.decode, option.fromEither)),\n        option.map(\n          value => [option.some(value), props.options[value]] as SelectState<T>\n        ),\n        option.fold(constVoid, props.onChange)\n      )\n    }\n\n    const color: Color = pipe(\n      props.error,\n      option.fold(\n        () =>\n          pipe(\n            props.warning,\n            option.fold(\n              () =>\n                pipe(\n                  isFocus,\n                  boolean.fold(\n                    () => 'default',\n                    () => 'primary'\n                  )\n                ),\n              () => 'warning'\n            )\n          ),\n        () => 'danger'\n      )\n    )\n\n    return (\n      <Select\n        type=\"async\"\n        {...props}\n        className={composeClassName('CounterSelect', className)}\n        onQueryChange={constVoid}\n        emptyPlaceholder={'' as LocalizedString}\n        isLoading={false}\n        onFocus={() => setIsFocus(true)}\n        onBlur={() => setIsFocus(false)}\n        ref={ref}\n      >\n        <Button\n          className=\"back\"\n          type=\"iconButton\"\n          icon={chevronBack}\n          action={onBack}\n          disabled={disabled}\n          color={color}\n        />\n        <Button\n          className=\"forward\"\n          type=\"iconButton\"\n          icon={chevronForward}\n          action={onForward}\n          disabled={disabled}\n          color={color}\n        />\n      </Select>\n    )\n  }\n)\n","/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/utils.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/DatePickerForm.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Input/DateTimePicker/TimePickerForm.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Pages/Profile/CashedAmount.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/CashedAmount.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Pages/Profile/utils.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Button/IconOnlyButton.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/List/args.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/List/ReadonlyList.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/List/ReadonlyListWithIcons.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/List/RoutedList.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/List/RoutedListWithIcons.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/List/ListWithValues.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/ConnectionList/ConnectionList.tsx",["412","413"],"/Users/mconst/Documents/Working/cooler/client/src/misc/graphql.ts",["414","415","416","417"],"import { Option } from 'fp-ts/Option'\nimport * as t from 'io-ts'\nimport { NonEmptyString, optionFromNullable } from 'io-ts-types'\nimport { NonNegativeInteger } from '../globalDomain'\n\nexport const Edge = <T extends t.Mixed>(T: T) =>\n  t.type(\n    {\n      node: T,\n      cursor: NonEmptyString\n    },\n    `Edge<${T.name}>`\n  )\nexport interface Edge<T> {\n  node: T\n  cursor: NonEmptyString\n}\n\nexport const Connection = <T extends t.Mixed>(T: T) =>\n  t.type(\n    {\n      totalCount: NonNegativeInteger,\n      edges: t.array(Edge(T)),\n      pageInfo: t.type(\n        {\n          startCursor: optionFromNullable(NonEmptyString),\n          endCursor: optionFromNullable(NonEmptyString),\n          hasNextPage: t.boolean,\n          hasPreviousPage: t.boolean\n        },\n        'PageInfo'\n      )\n    },\n    `Connection<${T.name}>`\n  )\nexport interface Connection<T> {\n  totalCount: NonNegativeInteger\n  edges: Edge<T>[]\n  pageInfo: {\n    startCursor: Option<NonEmptyString>\n    endCursor: Option<NonEmptyString>\n    hasNextPage: boolean\n    hasPreviousPage: boolean\n  }\n}\n\nexport function getConnectionNodes<T>(connection: Connection<T>): T[] {\n  return connection.edges.map(edge => edge.node)\n}\n","/Users/mconst/Documents/Working/cooler/client/src/stories/ConnectionList.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Loading/LoadingBlock.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/constants.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/effects/useDebounce.ts",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Body.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Body/Body.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Heading.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Heading/Heading.tsx",["418"],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/UserForm.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/stories/Form/TaxForm.stories.tsx",[],"/Users/mconst/Documents/Working/cooler/client/src/components/Form/Forms/TaxForm.tsx",[],{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","severity":1,"message":"424","line":19,"column":13,"nodeType":"425","messageId":"426","endLine":19,"endColumn":28},{"ruleId":"423","severity":1,"message":"427","line":30,"column":13,"nodeType":"425","messageId":"426","endLine":30,"endColumn":24},{"ruleId":"423","severity":1,"message":"428","line":46,"column":13,"nodeType":"425","messageId":"426","endLine":46,"endColumn":18},{"ruleId":"423","severity":1,"message":"429","line":56,"column":13,"nodeType":"425","messageId":"426","endLine":56,"endColumn":17},{"ruleId":"423","severity":1,"message":"430","line":71,"column":13,"nodeType":"425","messageId":"426","endLine":71,"endColumn":28},{"ruleId":"423","severity":1,"message":"431","line":89,"column":13,"nodeType":"425","messageId":"426","endLine":89,"endColumn":38},{"ruleId":"423","severity":1,"message":"432","line":106,"column":13,"nodeType":"425","messageId":"426","endLine":106,"endColumn":31},{"ruleId":"423","severity":1,"message":"433","line":128,"column":13,"nodeType":"425","messageId":"426","endLine":128,"endColumn":41},{"ruleId":"423","severity":1,"message":"434","line":141,"column":13,"nodeType":"425","messageId":"426","endLine":141,"endColumn":30},{"ruleId":"423","severity":1,"message":"435","line":159,"column":13,"nodeType":"425","messageId":"426","endLine":159,"endColumn":40},{"ruleId":"423","severity":1,"message":"436","line":176,"column":13,"nodeType":"425","messageId":"426","endLine":176,"endColumn":23},{"ruleId":"423","severity":1,"message":"437","line":195,"column":13,"nodeType":"425","messageId":"426","endLine":195,"endColumn":33},{"ruleId":"423","severity":1,"message":"438","line":231,"column":27,"nodeType":"425","messageId":"426","endLine":231,"endColumn":28},{"ruleId":"423","severity":1,"message":"438","line":247,"column":37,"nodeType":"425","messageId":"426","endLine":247,"endColumn":38},{"ruleId":"423","severity":1,"message":"438","line":263,"column":26,"nodeType":"425","messageId":"426","endLine":263,"endColumn":27},{"ruleId":"423","severity":1,"message":"438","line":279,"column":36,"nodeType":"425","messageId":"426","endLine":279,"endColumn":37},{"ruleId":"423","severity":1,"message":"439","line":299,"column":13,"nodeType":"425","messageId":"426","endLine":299,"endColumn":18},{"ruleId":"423","severity":1,"message":"440","line":308,"column":13,"nodeType":"425","messageId":"426","endLine":308,"endColumn":28},{"ruleId":"423","severity":1,"message":"441","line":314,"column":13,"nodeType":"425","messageId":"426","endLine":314,"endColumn":16},{"ruleId":"423","severity":1,"message":"442","line":323,"column":13,"nodeType":"425","messageId":"426","endLine":323,"endColumn":26},{"ruleId":"423","severity":1,"message":"443","line":329,"column":13,"nodeType":"425","messageId":"426","endLine":329,"endColumn":17},{"ruleId":"423","severity":1,"message":"444","line":338,"column":13,"nodeType":"425","messageId":"426","endLine":338,"endColumn":27},{"ruleId":"423","severity":1,"message":"445","line":344,"column":13,"nodeType":"425","messageId":"426","endLine":344,"endColumn":19},{"ruleId":"423","severity":1,"message":"446","line":353,"column":13,"nodeType":"425","messageId":"426","endLine":353,"endColumn":29},{"ruleId":"423","severity":1,"message":"447","line":121,"column":13,"nodeType":"425","messageId":"426","endLine":121,"endColumn":21},{"ruleId":"423","severity":1,"message":"448","line":378,"column":13,"nodeType":"425","messageId":"426","endLine":378,"endColumn":20},{"ruleId":"423","severity":1,"message":"449","line":392,"column":13,"nodeType":"425","messageId":"426","endLine":392,"endColumn":38},{"ruleId":"423","severity":1,"message":"450","line":408,"column":13,"nodeType":"425","messageId":"426","endLine":408,"endColumn":39},{"ruleId":"423","severity":1,"message":"451","line":424,"column":13,"nodeType":"425","messageId":"426","endLine":424,"endColumn":40},{"ruleId":"423","severity":1,"message":"452","line":432,"column":13,"nodeType":"425","messageId":"426","endLine":432,"endColumn":32},{"ruleId":"423","severity":1,"message":"453","line":44,"column":6,"nodeType":"425","messageId":"426","endLine":44,"endColumn":14},{"ruleId":"423","severity":1,"message":"454","line":44,"column":13,"nodeType":"425","messageId":"426","endLine":44,"endColumn":31},{"ruleId":"423","severity":1,"message":"455","line":28,"column":6,"nodeType":"425","messageId":"426","endLine":28,"endColumn":16},{"ruleId":"423","severity":1,"message":"456","line":35,"column":14,"nodeType":"425","messageId":"426","endLine":35,"endColumn":33},{"ruleId":"423","severity":1,"message":"457","line":135,"column":14,"nodeType":"425","messageId":"426","endLine":135,"endColumn":28},{"ruleId":"423","severity":1,"message":"458","line":33,"column":14,"nodeType":"425","messageId":"426","endLine":33,"endColumn":42},{"ruleId":"459","severity":1,"message":"460","line":101,"column":5,"nodeType":"461","messageId":"462","endLine":118,"endColumn":8},{"ruleId":"459","severity":1,"message":"460","line":119,"column":5,"nodeType":"461","messageId":"462","endLine":135,"endColumn":8},{"ruleId":"423","severity":1,"message":"438","line":6,"column":22,"nodeType":"425","messageId":"426","endLine":6,"endColumn":23},{"ruleId":"423","severity":1,"message":"463","line":14,"column":18,"nodeType":"425","messageId":"426","endLine":14,"endColumn":22},{"ruleId":"423","severity":1,"message":"438","line":19,"column":28,"nodeType":"425","messageId":"426","endLine":19,"endColumn":29},{"ruleId":"423","severity":1,"message":"464","line":36,"column":18,"nodeType":"425","messageId":"426","endLine":36,"endColumn":28},{"ruleId":"423","severity":1,"message":"465","line":16,"column":13,"nodeType":"425","messageId":"426","endLine":16,"endColumn":24},"no-native-reassign",["466"],"no-negated-in-lhs",["467"],"@typescript-eslint/no-redeclare","'LocalizedString' is already defined.","Identifier","redeclared","'EmailString' is already defined.","'Color' is already defined.","'Size' is already defined.","'PositiveInteger' is already defined.","'PositiveIntegerFromString' is already defined.","'NonNegativeInteger' is already defined.","'NonNegativeIntegerFromString' is already defined.","'NonNegativeNumber' is already defined.","'NonNegativeNumberFromString' is already defined.","'Percentage' is already defined.","'PercentageFromString' is already defined.","'T' is already defined.","'Month' is already defined.","'MonthFromString' is already defined.","'Day' is already defined.","'DayFromString' is already defined.","'Hour' is already defined.","'HourFromString' is already defined.","'Minute' is already defined.","'MinuteFromString' is already defined.","'Province' is already defined.","'Country' is already defined.","'ClientCreationCommonInput' is already defined.","'PrivateClientCreationInput' is already defined.","'BusinessClientCreationInput' is already defined.","'ClientCreationInput' is already defined.","'FormType' is already defined.","'DateTimePickerMode' is already defined.","'TimePeriod' is already defined.","'UserData' is already defined.","'Select' is already defined.","'CounterSelect' is already defined.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Edge' is already defined.","'Connection' is already defined.","'HeadingSize' is already defined.","no-global-assign","no-unsafe-negation"]