"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
exports.default = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type SessionEdge implements Edge {\n    cursor: String!\n    node: Session!\n  }\n\n  type SessionConnection implements Connection {\n    pageInfo: PageInfo!\n    edges: [SessionEdge]!\n    totalCount: Int!\n  }\n\n  type Session implements Node {\n    id: Int!\n    start_time: Date!\n    end_time: Date\n    task: Task\n  }\n\n  input SessionUpdateInput {\n    start_time: Date\n    end_time: Date\n  }\n\n  input CreateTimesheetInput {\n    since: Date!\n    to: Date!\n    project: Int!\n  }\n\n  extend type Mutation {\n    startSession(task: Int!): Session\n    stopSession(id: Int!): Session\n    updateSession(id: Int!, session: SessionUpdateInput!): Session\n    deleteSession(id: Int!): Session\n    createTimesheet(for: CreateTimesheetInput!): String\n  }\n\n  extend type Query {\n    session(id: Int!): Session\n    sessions(\n      task: Int\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): SessionConnection!\n  }\n\n  # extend type Subscription {\n  #   startedSession(project: Int, task: Int): Session!\n  #   stoppedSession(project: Int, task: Int): Session!\n  # }\n\n  extend type User {\n    expectedWorkingHours(since: Date): Int!\n    actualWorkingHours(since: Date): Float!\n    budget(since: Date): Float!\n    balance(since: Date): Float!\n  }\n\n  extend type Task {\n    sessions(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): SessionConnection\n    actualWorkingHours: Float!\n    budget: Float!\n    balance: Float!\n  }\n\n  extend type Project {\n    expectedWorkingHours: Int!\n    actualWorkingHours: Float!\n    budget: Float!\n    balance: Float!\n  }\n\n  extend type User {\n    openSessions(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): SessionConnection\n  }\n"], ["\n  type SessionEdge implements Edge {\n    cursor: String!\n    node: Session!\n  }\n\n  type SessionConnection implements Connection {\n    pageInfo: PageInfo!\n    edges: [SessionEdge]!\n    totalCount: Int!\n  }\n\n  type Session implements Node {\n    id: Int!\n    start_time: Date!\n    end_time: Date\n    task: Task\n  }\n\n  input SessionUpdateInput {\n    start_time: Date\n    end_time: Date\n  }\n\n  input CreateTimesheetInput {\n    since: Date!\n    to: Date!\n    project: Int!\n  }\n\n  extend type Mutation {\n    startSession(task: Int!): Session\n    stopSession(id: Int!): Session\n    updateSession(id: Int!, session: SessionUpdateInput!): Session\n    deleteSession(id: Int!): Session\n    createTimesheet(for: CreateTimesheetInput!): String\n  }\n\n  extend type Query {\n    session(id: Int!): Session\n    sessions(\n      task: Int\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): SessionConnection!\n  }\n\n  # extend type Subscription {\n  #   startedSession(project: Int, task: Int): Session!\n  #   stoppedSession(project: Int, task: Int): Session!\n  # }\n\n  extend type User {\n    expectedWorkingHours(since: Date): Int!\n    actualWorkingHours(since: Date): Float!\n    budget(since: Date): Float!\n    balance(since: Date): Float!\n  }\n\n  extend type Task {\n    sessions(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): SessionConnection\n    actualWorkingHours: Float!\n    budget: Float!\n    balance: Float!\n  }\n\n  extend type Project {\n    expectedWorkingHours: Int!\n    actualWorkingHours: Float!\n    budget: Float!\n    balance: Float!\n  }\n\n  extend type User {\n    openSessions(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): SessionConnection\n  }\n"])));
var templateObject_1;
