"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var sql_template_strings_1 = __importDefault(require("sql-template-strings"));
var dbUtils_1 = require("../misc/dbUtils");
function init() {
    return dbUtils_1.dbExec(sql_template_strings_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    CREATE TABLE IF NOT EXISTS client (\n      id INTEGER PRIMARY KEY,\n      type TEXT NOT NULL,\n      fiscal_code TEXT DEFAULT NULL,\n      first_name TEXT DEFAULT NULL,\n      last_name TEXT DEFAULT NULL,\n      country_code TEXT DEFAULT NULL,\n      vat_number TEXT DEFAULT NULL,\n      business_name TEXT DEFAULT NULL,\n      address_country TEXT NOT NULL,\n      address_province TEXT NOT NULL,\n      address_city TEXT NOT NULL,\n      address_zip TEXT NOT NULL,\n      address_street TEXT NOT NULL,\n      address_street_number TEXT DEFAULT NULL,\n      address_email TEXT NOT NULL,\n      user INTEGER NOT NULL,\n      created_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      updated_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY(user) REFERENCES user(id),\n      CHECK ((\n        type = 'PRIVATE' AND\n        fiscal_code IS NOT NULL AND\n        first_name IS NOT NULL AND\n        last_name IS NOT NULL\n      ) OR (\n        type = 'BUSINESS' AND\n        country_code IS NOT NULL AND\n        vat_number IS NOT NULL AND\n        business_name IS NOT NULL\n      ))\n    );\n\n    CREATE TRIGGER IF NOT EXISTS client_updated_at AFTER UPDATE ON client\n    FOR EACH ROW BEGIN\n      UPDATE client SET updated_at = CURRENT_TIMESTAMP WHERE id = OLD.id;\n    END;\n\n    CREATE TRIGGER IF NOT EXISTS client_user_deleted AFTER DELETE ON user\n    FOR EACH ROW BEGIN\n      DELETE FROM client WHERE user = OLD.id;\n    END;\n  "], ["\n    CREATE TABLE IF NOT EXISTS client (\n      id INTEGER PRIMARY KEY,\n      type TEXT NOT NULL,\n      fiscal_code TEXT DEFAULT NULL,\n      first_name TEXT DEFAULT NULL,\n      last_name TEXT DEFAULT NULL,\n      country_code TEXT DEFAULT NULL,\n      vat_number TEXT DEFAULT NULL,\n      business_name TEXT DEFAULT NULL,\n      address_country TEXT NOT NULL,\n      address_province TEXT NOT NULL,\n      address_city TEXT NOT NULL,\n      address_zip TEXT NOT NULL,\n      address_street TEXT NOT NULL,\n      address_street_number TEXT DEFAULT NULL,\n      address_email TEXT NOT NULL,\n      user INTEGER NOT NULL,\n      created_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      updated_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY(user) REFERENCES user(id),\n      CHECK ((\n        type = 'PRIVATE' AND\n        fiscal_code IS NOT NULL AND\n        first_name IS NOT NULL AND\n        last_name IS NOT NULL\n      ) OR (\n        type = 'BUSINESS' AND\n        country_code IS NOT NULL AND\n        vat_number IS NOT NULL AND\n        business_name IS NOT NULL\n      ))\n    );\n\n    CREATE TRIGGER IF NOT EXISTS client_updated_at AFTER UPDATE ON client\n    FOR EACH ROW BEGIN\n      UPDATE client SET updated_at = CURRENT_TIMESTAMP WHERE id = OLD.id;\n    END;\n\n    CREATE TRIGGER IF NOT EXISTS client_user_deleted AFTER DELETE ON user\n    FOR EACH ROW BEGIN\n      DELETE FROM client WHERE user = OLD.id;\n    END;\n  "]))));
}
exports.default = init;
var templateObject_1;
