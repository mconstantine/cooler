"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
exports.default = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type ProjectEdge implements Edge {\n    cursor: String!\n    node: Project!\n  }\n\n  type ProjectConnection implements Connection {\n    pageInfo: PageInfo!\n    edges: [ProjectEdge]!\n    totalCount: Int!\n  }\n\n  type Project implements TrackedNode & Node {\n    id: Int!\n    name: String!\n    description: String\n    created_at: Date!\n    updated_at: Date!\n    cashed_at: Date\n    cashed_balance: Float\n    client: Client!\n  }\n\n  input ProjectCreationInput {\n    name: String!\n    description: String\n    client: Int!\n  }\n\n  input ProjectUpdateInput {\n    name: String\n    description: String\n    client: Int\n    cashed_at: Date\n    cashed_balance: Float\n  }\n\n  extend type User {\n    projects(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): ProjectConnection!\n    cashedBalance(since: Date): Float!\n  }\n\n  extend type Client {\n    projects(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): ProjectConnection!\n  }\n\n  extend type Mutation {\n    createProject(project: ProjectCreationInput!): Project!\n    updateProject(id: Int!, project: ProjectUpdateInput!): Project!\n    deleteProject(id: Int!): Project!\n  }\n\n  extend type Query {\n    project(id: Int): Project\n    projects(\n      name: String\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): ProjectConnection!\n  }\n\n  # extend type Subscription {\n  #   createdProject(client: Int): Project!\n  # }\n"], ["\n  type ProjectEdge implements Edge {\n    cursor: String!\n    node: Project!\n  }\n\n  type ProjectConnection implements Connection {\n    pageInfo: PageInfo!\n    edges: [ProjectEdge]!\n    totalCount: Int!\n  }\n\n  type Project implements TrackedNode & Node {\n    id: Int!\n    name: String!\n    description: String\n    created_at: Date!\n    updated_at: Date!\n    cashed_at: Date\n    cashed_balance: Float\n    client: Client!\n  }\n\n  input ProjectCreationInput {\n    name: String!\n    description: String\n    client: Int!\n  }\n\n  input ProjectUpdateInput {\n    name: String\n    description: String\n    client: Int\n    cashed_at: Date\n    cashed_balance: Float\n  }\n\n  extend type User {\n    projects(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): ProjectConnection!\n    cashedBalance(since: Date): Float!\n  }\n\n  extend type Client {\n    projects(\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): ProjectConnection!\n  }\n\n  extend type Mutation {\n    createProject(project: ProjectCreationInput!): Project!\n    updateProject(id: Int!, project: ProjectUpdateInput!): Project!\n    deleteProject(id: Int!): Project!\n  }\n\n  extend type Query {\n    project(id: Int): Project\n    projects(\n      name: String\n      first: Int\n      last: Int\n      before: String\n      after: String\n      orderBy: String\n    ): ProjectConnection!\n  }\n\n  # extend type Subscription {\n  #   createdProject(client: Int): Project!\n  # }\n"])));
var templateObject_1;
